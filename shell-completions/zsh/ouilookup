#compdef ouilookup ouilookup.py ouilookup.pyz

# AUTOMATICALLY GENERATED by `shtab`


_shtab_ouilookup_commands() {
  local _commands=(
    
  )
  _describe 'ouilookup commands' _commands
}

_shtab_ouilookup_options=(
  "(- : *)"{-h,--help}"[show this help message and exit]"
  "(- : *)"{-v,--version}"[show the version number and exit]"
  {-d,--download}"[Download \`https\:\/\/standards-oui.ieee.org\/oui\/oui.txt\` to \`\/home\/todd\/oui.txt\`.]"
  {-f,--file}"[Use a file with one MAC address per line. This option can be combined with the \`--include\` option.]:file:"
  {-q,--quiet}"[Suppress warning messages when MAC is not valid\/supplied]"
  {-i,--include}"[Include one additional item of information in the output, such as an IP address or a hostname, by specifying the additional information followed by the OUI. The format is additional-information followed by a field separator followed by the OUI. Field separator choices are comma (default), semicolon, and whitespace characters.
Examples\: \`192.168.1.14,00\:1a\:8c\:03\:60\:f9\` \`foo-srvr,00\:1a\:8c\:03\:60\:fa\`.
Note\: type -- after -i for the default field separator or add the -i option at the very end of the command.]:sep:(; ,   	 
   )"
  "(*)::The OUI portion of the MAC (first 6 hex digits) or the entire MAC. If providing multiple, separate each OUI\/MAC with a space. Within the OUI\/MAC separating characters such as \`\:\`, \`-\`, or \`.\` are allowed:"
)


_shtab_ouilookup() {
  local context state line curcontext="$curcontext" one_or_more='(-)*' remainder='(*)'

  if ((${_shtab_ouilookup_options[(I)${(q)one_or_more}*]} + ${_shtab_ouilookup_options[(I)${(q)remainder}*]} == 0)); then  # noqa: E501
    _shtab_ouilookup_options+=(': :_shtab_ouilookup_commands' '*::: :->ouilookup')
  fi
  _arguments -C -s $_shtab_ouilookup_options

  case $state in
    ouilookup)
      words=($line[1] "${words[@]}")
      (( CURRENT += 1 ))
      curcontext="${curcontext%:*:*}:_shtab_ouilookup-$line[1]:"
      case $line[1] in
        
      esac
  esac
}



typeset -A opt_args

if [[ $zsh_eval_context[-1] == eval ]]; then
  # eval/source/. command, register function for later
  compdef _shtab_ouilookup -N ouilookup
else
  # autoload from fpath, call function directly
  _shtab_ouilookup "$@"
fi

